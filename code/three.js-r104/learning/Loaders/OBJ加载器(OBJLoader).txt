用来加载一个 .obj 格式的资源

构造器（Constructor）
    	OBJLoader( manager )
    	manager — loadingManager 对象。缺省是 THREE.DefaultLoadingManager。
    	创建一个新的 OBJLoader.

.load ( url, onLoad, onProgress, onError )
	url — 资源链接。必选参数。
	onLoad — 当加载完成时被调用。参数将是已加载的object.
	onProgress — 当加载在进行中时被调用。参数是 XmlHttpRequest 实例，包含 .total 和 .loaded 字节。
	onError — 如果加载有错误将调用该函数。
	从url处开始加载，并传递已解析的应答内容给onLoad函数。

.parse ( text )
	text — 要解析的obj结构化文本。
	把一个obj结构化文本解析为一个 3D对象(Object3D)对象。
	获得的对象被转换成 Mesh，使用一个 缓存几何模型(BufferGeometry) 和一个缺省的 MeshLambertMaterial。

代码示例：
	// 实例化一个加载器
	var loader = new THREE.OBJLoader();

	// 加载一个资源
	loader.load(
		// 资源链接
		'models/skinned/UCS_config.json',
		// 资源加载完成后的回调函数
		function ( object ) {
			scene.add( object );
		}
	);



