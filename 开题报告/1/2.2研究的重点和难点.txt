  当前对于web端的3D展示并没有统一的模型格式，导致需要使用不同的方法加载处理不同的模型。而且对于当前一些通用的模型而言，如.max后
缀的模型文件，是3dmax的专属模型文件格式，由于没有开源的原因，个人无法实现加载，除非购买3dmax的sdk才能加载相应的模型。由于无法规
范所有上传模型文件的规范以及提前得知模型文件的内容，因此很难在直接加载，不做其他调整的情况下完美的展示模型文件。
  由于在浏览器平台做3D应用的缘故，可以加载的模型资源受限，过大的模型会导致浏览器崩溃，卡顿。而且过大的模型文件也会导致网页加载时
间过长，严重影响用户体验。而且当在场景中存在过多的网格对象时，网格对象之间的碰撞检测，物体的选择等都会是需要解决的问题。
  在复杂3D场景中的webGL应用有着代码逻辑复杂，开发周期漫长等无法避免的问题，这就要求在开发的前期就预先做好规划、书写规范化、组件
化、工程化的标准代码，尽量增强代码的可阅读性，降低开发难度。